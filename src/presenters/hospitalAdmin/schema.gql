# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MobileHospitals {
  id: Int!
  name: String!
  addr: String!
  safePhone: String
  longitude: Float!
  latitude: Float!
  appHospitalField1: String
  appHospitalField2: String
}

type Query {
  adminHospitals(page: Int = 20, skip: Int = 0): [AdminHospitals]!
  adminhospital(id: Int!): AdminHospitals!
  adminDoctors: [AdminDoctors]!
  adminDoctor(id: Int!): AdminDoctors!
}

type AdminHospitals {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  addr: String!
  phone: String!
  safePhone: String
  hospitalType: HospitalTypesEnum!
  longitude: Float!
  latitude: Float!
  searchable: Boolean
  isDeleted: Boolean
  doctors: [Doctors]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum HospitalTypesEnum {
  hospital
  pharmacy
  generalHospital
}

type Doctors {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  position: String!
  gender: Int
  image: String
  searchable: Boolean
  hospital: Hospitals!
  doctorTags: [DoctorTags]
}

type Hospitals {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  addr: String!
  phone: String!
  safePhone: String
  hospitalType: HospitalTypesEnum!
  longitude: Float!
  latitude: Float!
  searchable: Boolean
  isDeleted: Boolean
  doctors: [Doctors]
}

type DoctorTags {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  tag: String!
  doctor: Doctors!
}

type AdminDoctors {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  position: String!
  gender: Int
  image: String
  searchable: Boolean
  hospital: AdminHospitals!
  doctorTags: [AdminDoctorTags]
}

type AdminDoctorTags {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  tag: String!
  doctor: Doctors!
}

type Mutation {
  createAdminHospital(createAdminHospitalInput: CreateAdminHospitalInput!): AdminHospitals!
  updateAdminHospital(updateAdminHospitalInput: UpdateAdminHospitalInput!): AdminHospitals!
  createAdminDoctor(createDoctorInput: CreateDoctorInput!): AdminDoctors!
  updateAdminDoctor(updateDoctorInput: UpdateDoctorInput!): AdminDoctors!
  removeAdminDoctor(id: Int!): AdminDoctors!
}

input CreateAdminHospitalInput {
  name: String!
  addr: String!
  phone: String!
  safePhone: String
  hospitalType: HospitalTypesEnum!
  longitude: Float!
  latitude: Float!
  searchable: Boolean
  isDeleted: Boolean
  doctors: [DoctorInput]
}

input DoctorInput {
  name: String!
  position: String!
  gender: Int
  image: String
  searchable: Boolean
  hospital: HospitalInput!
  doctorTags: [DoctorTagInput]
}

input HospitalInput {
  name: String!
  addr: String!
  phone: String!
  safePhone: String
  hospitalType: HospitalTypesEnum!
  longitude: Float!
  latitude: Float!
  searchable: Boolean
  isDeleted: Boolean
  doctors: [DoctorInput]
}

input DoctorTagInput {
  tag: String!
  doctor: DoctorInput!
}

input UpdateAdminHospitalInput {
  id: Int!
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  addr: String
  phone: String
  safePhone: String
  hospitalType: HospitalTypesEnum
  longitude: Float
  latitude: Float
  searchable: Boolean
  isDeleted: Boolean
  doctors: [DoctorInput!]
}

input CreateDoctorInput {
  name: String!
  position: String!
  gender: Int!
  image: String
  doctorTags: [AdminDoctorTagInput]
  hospitalId: Int
  adminHospital: UpdateAdminHospitalInput!
}

input AdminDoctorTagInput {
  tag: String!
  doctor: DoctorInput!
}

input UpdateDoctorInput {
  id: Int!
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  position: String
  gender: Int
  image: String
  searchable: Boolean
  hospital: HospitalInput
  doctorTags: [AdminDoctorTagInput]
  hospitalId: Int
  adminHospital: UpdateAdminHospitalInput
}
